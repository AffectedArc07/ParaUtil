/*
 * This file is generated by jOOQ.
 */
package me.aa07.parautil.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.aa07.parautil.database.Indexes;
import me.aa07.parautil.database.Keys;
import me.aa07.parautil.database.ParadiseMc;
import me.aa07.parautil.database.tables.records.LinkedAccountsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinkedAccounts extends TableImpl<LinkedAccountsRecord> {

    private static final long serialVersionUID = 892812140;

    /**
     * The reference instance of <code>paradise_mc.linked_accounts</code>
     */
    public static final LinkedAccounts LINKED_ACCOUNTS = new LinkedAccounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LinkedAccountsRecord> getRecordType() {
        return LinkedAccountsRecord.class;
    }

    /**
     * The column <code>paradise_mc.linked_accounts.uuid</code>.
     */
    public final TableField<LinkedAccountsRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>paradise_mc.linked_accounts.fuid</code>.
     */
    public final TableField<LinkedAccountsRecord, Long> FUID = createField("fuid", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>paradise_mc.linked_accounts</code> table reference
     */
    public LinkedAccounts() {
        this(DSL.name("linked_accounts"), null);
    }

    /**
     * Create an aliased <code>paradise_mc.linked_accounts</code> table reference
     */
    public LinkedAccounts(String alias) {
        this(DSL.name(alias), LINKED_ACCOUNTS);
    }

    /**
     * Create an aliased <code>paradise_mc.linked_accounts</code> table reference
     */
    public LinkedAccounts(Name alias) {
        this(alias, LINKED_ACCOUNTS);
    }

    private LinkedAccounts(Name alias, Table<LinkedAccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private LinkedAccounts(Name alias, Table<LinkedAccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LinkedAccounts(Table<O> child, ForeignKey<O, LinkedAccountsRecord> key) {
        super(child, key, LINKED_ACCOUNTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ParadiseMc.PARADISE_MC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LINKED_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LinkedAccountsRecord> getPrimaryKey() {
        return Keys.KEY_LINKED_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LinkedAccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<LinkedAccountsRecord>>asList(Keys.KEY_LINKED_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkedAccounts as(String alias) {
        return new LinkedAccounts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkedAccounts as(Name alias) {
        return new LinkedAccounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LinkedAccounts rename(String name) {
        return new LinkedAccounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LinkedAccounts rename(Name name) {
        return new LinkedAccounts(name, null);
    }
}
