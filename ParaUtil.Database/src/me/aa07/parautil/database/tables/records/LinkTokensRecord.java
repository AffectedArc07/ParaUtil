/*
 * This file is generated by jOOQ.
 */
package me.aa07.parautil.database.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import me.aa07.parautil.database.tables.LinkTokens;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinkTokensRecord extends UpdatableRecordImpl<LinkTokensRecord> implements Record4<String, String, String, Timestamp> {

    private static final long serialVersionUID = -825633673;

    /**
     * Setter for <code>paradise_mc.link_tokens.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_mc.link_tokens.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_mc.link_tokens.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_mc.link_tokens.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_mc.link_tokens.ip</code>.
     */
    public void setIp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_mc.link_tokens.ip</code>.
     */
    public String getIp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_mc.link_tokens.creation_time</code>.
     */
    public void setCreationTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_mc.link_tokens.creation_time</code>.
     */
    public Timestamp getCreationTime() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return LinkTokens.LINK_TOKENS.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return LinkTokens.LINK_TOKENS.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return LinkTokens.LINK_TOKENS.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return LinkTokens.LINK_TOKENS.CREATION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCreationTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreationTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkTokensRecord value1(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkTokensRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkTokensRecord value3(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkTokensRecord value4(Timestamp value) {
        setCreationTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinkTokensRecord values(String value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkTokensRecord
     */
    public LinkTokensRecord() {
        super(LinkTokens.LINK_TOKENS);
    }

    /**
     * Create a detached, initialised LinkTokensRecord
     */
    public LinkTokensRecord(String uuid, String token, String ip, Timestamp creationTime) {
        super(LinkTokens.LINK_TOKENS);

        set(0, uuid);
        set(1, token);
        set(2, ip);
        set(3, creationTime);
    }
}
